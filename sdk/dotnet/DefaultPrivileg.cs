// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.PostgreSql
{
    /// <summary>
    /// The ``postgresql.DefaultPrivileges`` resource creates and manages default privileges given to a user for a database schema.
    /// 
    /// &gt; **Note:** This resource needs Postgresql version 9 or above.
    /// 
    /// ## Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using PostgreSql = Pulumi.PostgreSql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var readOnlyTables = new PostgreSql.DefaultPrivileges("read_only_tables", new()
    ///     {
    ///         Role = "test_role",
    ///         Database = "test_db",
    ///         Schema = "public",
    ///         Owner = "db_owner",
    ///         ObjectType = "table",
    ///         Privileges = new[]
    ///         {
    ///             "SELECT",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Examples
    /// 
    /// ### Grant default privileges for tables to "current_role" role:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using PostgreSql = Pulumi.PostgreSql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var grantTablePrivileges = new PostgreSql.DefaultPrivileges("grant_table_privileges", new()
    ///     {
    ///         Database = exampleDb.Name,
    ///         Role = "current_role",
    ///         Owner = "owner_role",
    ///         Schema = "public",
    ///         ObjectType = "table",
    ///         Privileges = new[]
    ///         {
    ///             "SELECT",
    ///             "INSERT",
    ///             "UPDATE",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// Whenever the `owner_role` creates a new table in the `public` schema, the `current_role` is automatically granted SELECT, INSERT, and UPDATE privileges on that table.
    /// 
    /// ### Revoke default privileges for functions for "public" role:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using PostgreSql = Pulumi.PostgreSql;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var revokePublic = new PostgreSql.DefaultPrivileges("revoke_public", new()
    ///     {
    ///         Database = exampleDb.Name,
    ///         Role = "public",
    ///         Owner = "object_owner",
    ///         ObjectType = "function",
    ///         Privileges = new[] {},
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [Obsolete(@"postgresql.DefaultPrivileg has been deprecated in favor of postgresql.DefaultPrivileges")]
    [PostgreSqlResourceType("postgresql:index/defaultPrivileg:DefaultPrivileg")]
    public partial class DefaultPrivileg : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The database to grant default privileges for this role.
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// The PostgreSQL object type to set the default privileges on (one of: table, sequence, function, type, schema).
        /// </summary>
        [Output("objectType")]
        public Output<string> ObjectType { get; private set; } = null!;

        /// <summary>
        /// Specifies the role that creates objects for which the default privileges will be applied.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// List of privileges (e.g., SELECT, INSERT, UPDATE, DELETE) to grant on new objects created by the owner. An empty list could be provided to revoke all default privileges for this role.
        /// </summary>
        [Output("privileges")]
        public Output<ImmutableArray<string>> Privileges { get; private set; } = null!;

        /// <summary>
        /// The role that will automatically be granted the specified privileges on new objects created by the owner.
        /// </summary>
        [Output("role")]
        public Output<string> Role { get; private set; } = null!;

        /// <summary>
        /// The database schema to set default privileges for this role.
        /// </summary>
        [Output("schema")]
        public Output<string?> Schema { get; private set; } = null!;

        /// <summary>
        /// Permit the grant recipient to grant it to others
        /// </summary>
        [Output("withGrantOption")]
        public Output<bool?> WithGrantOption { get; private set; } = null!;


        /// <summary>
        /// Create a DefaultPrivileg resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DefaultPrivileg(string name, DefaultPrivilegArgs args, CustomResourceOptions? options = null)
            : base("postgresql:index/defaultPrivileg:DefaultPrivileg", name, args ?? new DefaultPrivilegArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DefaultPrivileg(string name, Input<string> id, DefaultPrivilegState? state = null, CustomResourceOptions? options = null)
            : base("postgresql:index/defaultPrivileg:DefaultPrivileg", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DefaultPrivileg resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DefaultPrivileg Get(string name, Input<string> id, DefaultPrivilegState? state = null, CustomResourceOptions? options = null)
        {
            return new DefaultPrivileg(name, id, state, options);
        }
    }

    public sealed class DefaultPrivilegArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database to grant default privileges for this role.
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// The PostgreSQL object type to set the default privileges on (one of: table, sequence, function, type, schema).
        /// </summary>
        [Input("objectType", required: true)]
        public Input<string> ObjectType { get; set; } = null!;

        /// <summary>
        /// Specifies the role that creates objects for which the default privileges will be applied.
        /// </summary>
        [Input("owner", required: true)]
        public Input<string> Owner { get; set; } = null!;

        [Input("privileges", required: true)]
        private InputList<string>? _privileges;

        /// <summary>
        /// List of privileges (e.g., SELECT, INSERT, UPDATE, DELETE) to grant on new objects created by the owner. An empty list could be provided to revoke all default privileges for this role.
        /// </summary>
        public InputList<string> Privileges
        {
            get => _privileges ?? (_privileges = new InputList<string>());
            set => _privileges = value;
        }

        /// <summary>
        /// The role that will automatically be granted the specified privileges on new objects created by the owner.
        /// </summary>
        [Input("role", required: true)]
        public Input<string> Role { get; set; } = null!;

        /// <summary>
        /// The database schema to set default privileges for this role.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// Permit the grant recipient to grant it to others
        /// </summary>
        [Input("withGrantOption")]
        public Input<bool>? WithGrantOption { get; set; }

        public DefaultPrivilegArgs()
        {
        }
        public static new DefaultPrivilegArgs Empty => new DefaultPrivilegArgs();
    }

    public sealed class DefaultPrivilegState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database to grant default privileges for this role.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// The PostgreSQL object type to set the default privileges on (one of: table, sequence, function, type, schema).
        /// </summary>
        [Input("objectType")]
        public Input<string>? ObjectType { get; set; }

        /// <summary>
        /// Specifies the role that creates objects for which the default privileges will be applied.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        [Input("privileges")]
        private InputList<string>? _privileges;

        /// <summary>
        /// List of privileges (e.g., SELECT, INSERT, UPDATE, DELETE) to grant on new objects created by the owner. An empty list could be provided to revoke all default privileges for this role.
        /// </summary>
        public InputList<string> Privileges
        {
            get => _privileges ?? (_privileges = new InputList<string>());
            set => _privileges = value;
        }

        /// <summary>
        /// The role that will automatically be granted the specified privileges on new objects created by the owner.
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The database schema to set default privileges for this role.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// Permit the grant recipient to grant it to others
        /// </summary>
        [Input("withGrantOption")]
        public Input<bool>? WithGrantOption { get; set; }

        public DefaultPrivilegState()
        {
        }
        public static new DefaultPrivilegState Empty => new DefaultPrivilegState();
    }
}
