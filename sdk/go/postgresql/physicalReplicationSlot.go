// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-postgresql/sdk/v3/go/postgresql/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The “PhysicalReplicationSlot“ resource creates and manages a physical replication slot on a PostgreSQL
// server. This is useful to setup a cross datacenter replication, with Patroni for example, or permit
// any stand-by cluster to replicate physically data.
type PhysicalReplicationSlot struct {
	pulumi.CustomResourceState

	// The name of the replication slot.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewPhysicalReplicationSlot registers a new resource with the given unique name, arguments, and options.
func NewPhysicalReplicationSlot(ctx *pulumi.Context,
	name string, args *PhysicalReplicationSlotArgs, opts ...pulumi.ResourceOption) (*PhysicalReplicationSlot, error) {
	if args == nil {
		args = &PhysicalReplicationSlotArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PhysicalReplicationSlot
	err := ctx.RegisterResource("postgresql:index/physicalReplicationSlot:PhysicalReplicationSlot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPhysicalReplicationSlot gets an existing PhysicalReplicationSlot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPhysicalReplicationSlot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PhysicalReplicationSlotState, opts ...pulumi.ResourceOption) (*PhysicalReplicationSlot, error) {
	var resource PhysicalReplicationSlot
	err := ctx.ReadResource("postgresql:index/physicalReplicationSlot:PhysicalReplicationSlot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PhysicalReplicationSlot resources.
type physicalReplicationSlotState struct {
	// The name of the replication slot.
	Name *string `pulumi:"name"`
}

type PhysicalReplicationSlotState struct {
	// The name of the replication slot.
	Name pulumi.StringPtrInput
}

func (PhysicalReplicationSlotState) ElementType() reflect.Type {
	return reflect.TypeOf((*physicalReplicationSlotState)(nil)).Elem()
}

type physicalReplicationSlotArgs struct {
	// The name of the replication slot.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a PhysicalReplicationSlot resource.
type PhysicalReplicationSlotArgs struct {
	// The name of the replication slot.
	Name pulumi.StringPtrInput
}

func (PhysicalReplicationSlotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*physicalReplicationSlotArgs)(nil)).Elem()
}

type PhysicalReplicationSlotInput interface {
	pulumi.Input

	ToPhysicalReplicationSlotOutput() PhysicalReplicationSlotOutput
	ToPhysicalReplicationSlotOutputWithContext(ctx context.Context) PhysicalReplicationSlotOutput
}

func (*PhysicalReplicationSlot) ElementType() reflect.Type {
	return reflect.TypeOf((**PhysicalReplicationSlot)(nil)).Elem()
}

func (i *PhysicalReplicationSlot) ToPhysicalReplicationSlotOutput() PhysicalReplicationSlotOutput {
	return i.ToPhysicalReplicationSlotOutputWithContext(context.Background())
}

func (i *PhysicalReplicationSlot) ToPhysicalReplicationSlotOutputWithContext(ctx context.Context) PhysicalReplicationSlotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhysicalReplicationSlotOutput)
}

func (i *PhysicalReplicationSlot) ToOutput(ctx context.Context) pulumix.Output[*PhysicalReplicationSlot] {
	return pulumix.Output[*PhysicalReplicationSlot]{
		OutputState: i.ToPhysicalReplicationSlotOutputWithContext(ctx).OutputState,
	}
}

// PhysicalReplicationSlotArrayInput is an input type that accepts PhysicalReplicationSlotArray and PhysicalReplicationSlotArrayOutput values.
// You can construct a concrete instance of `PhysicalReplicationSlotArrayInput` via:
//
//	PhysicalReplicationSlotArray{ PhysicalReplicationSlotArgs{...} }
type PhysicalReplicationSlotArrayInput interface {
	pulumi.Input

	ToPhysicalReplicationSlotArrayOutput() PhysicalReplicationSlotArrayOutput
	ToPhysicalReplicationSlotArrayOutputWithContext(context.Context) PhysicalReplicationSlotArrayOutput
}

type PhysicalReplicationSlotArray []PhysicalReplicationSlotInput

func (PhysicalReplicationSlotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhysicalReplicationSlot)(nil)).Elem()
}

func (i PhysicalReplicationSlotArray) ToPhysicalReplicationSlotArrayOutput() PhysicalReplicationSlotArrayOutput {
	return i.ToPhysicalReplicationSlotArrayOutputWithContext(context.Background())
}

func (i PhysicalReplicationSlotArray) ToPhysicalReplicationSlotArrayOutputWithContext(ctx context.Context) PhysicalReplicationSlotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhysicalReplicationSlotArrayOutput)
}

func (i PhysicalReplicationSlotArray) ToOutput(ctx context.Context) pulumix.Output[[]*PhysicalReplicationSlot] {
	return pulumix.Output[[]*PhysicalReplicationSlot]{
		OutputState: i.ToPhysicalReplicationSlotArrayOutputWithContext(ctx).OutputState,
	}
}

// PhysicalReplicationSlotMapInput is an input type that accepts PhysicalReplicationSlotMap and PhysicalReplicationSlotMapOutput values.
// You can construct a concrete instance of `PhysicalReplicationSlotMapInput` via:
//
//	PhysicalReplicationSlotMap{ "key": PhysicalReplicationSlotArgs{...} }
type PhysicalReplicationSlotMapInput interface {
	pulumi.Input

	ToPhysicalReplicationSlotMapOutput() PhysicalReplicationSlotMapOutput
	ToPhysicalReplicationSlotMapOutputWithContext(context.Context) PhysicalReplicationSlotMapOutput
}

type PhysicalReplicationSlotMap map[string]PhysicalReplicationSlotInput

func (PhysicalReplicationSlotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhysicalReplicationSlot)(nil)).Elem()
}

func (i PhysicalReplicationSlotMap) ToPhysicalReplicationSlotMapOutput() PhysicalReplicationSlotMapOutput {
	return i.ToPhysicalReplicationSlotMapOutputWithContext(context.Background())
}

func (i PhysicalReplicationSlotMap) ToPhysicalReplicationSlotMapOutputWithContext(ctx context.Context) PhysicalReplicationSlotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PhysicalReplicationSlotMapOutput)
}

func (i PhysicalReplicationSlotMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*PhysicalReplicationSlot] {
	return pulumix.Output[map[string]*PhysicalReplicationSlot]{
		OutputState: i.ToPhysicalReplicationSlotMapOutputWithContext(ctx).OutputState,
	}
}

type PhysicalReplicationSlotOutput struct{ *pulumi.OutputState }

func (PhysicalReplicationSlotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PhysicalReplicationSlot)(nil)).Elem()
}

func (o PhysicalReplicationSlotOutput) ToPhysicalReplicationSlotOutput() PhysicalReplicationSlotOutput {
	return o
}

func (o PhysicalReplicationSlotOutput) ToPhysicalReplicationSlotOutputWithContext(ctx context.Context) PhysicalReplicationSlotOutput {
	return o
}

func (o PhysicalReplicationSlotOutput) ToOutput(ctx context.Context) pulumix.Output[*PhysicalReplicationSlot] {
	return pulumix.Output[*PhysicalReplicationSlot]{
		OutputState: o.OutputState,
	}
}

// The name of the replication slot.
func (o PhysicalReplicationSlotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PhysicalReplicationSlot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type PhysicalReplicationSlotArrayOutput struct{ *pulumi.OutputState }

func (PhysicalReplicationSlotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PhysicalReplicationSlot)(nil)).Elem()
}

func (o PhysicalReplicationSlotArrayOutput) ToPhysicalReplicationSlotArrayOutput() PhysicalReplicationSlotArrayOutput {
	return o
}

func (o PhysicalReplicationSlotArrayOutput) ToPhysicalReplicationSlotArrayOutputWithContext(ctx context.Context) PhysicalReplicationSlotArrayOutput {
	return o
}

func (o PhysicalReplicationSlotArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*PhysicalReplicationSlot] {
	return pulumix.Output[[]*PhysicalReplicationSlot]{
		OutputState: o.OutputState,
	}
}

func (o PhysicalReplicationSlotArrayOutput) Index(i pulumi.IntInput) PhysicalReplicationSlotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PhysicalReplicationSlot {
		return vs[0].([]*PhysicalReplicationSlot)[vs[1].(int)]
	}).(PhysicalReplicationSlotOutput)
}

type PhysicalReplicationSlotMapOutput struct{ *pulumi.OutputState }

func (PhysicalReplicationSlotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PhysicalReplicationSlot)(nil)).Elem()
}

func (o PhysicalReplicationSlotMapOutput) ToPhysicalReplicationSlotMapOutput() PhysicalReplicationSlotMapOutput {
	return o
}

func (o PhysicalReplicationSlotMapOutput) ToPhysicalReplicationSlotMapOutputWithContext(ctx context.Context) PhysicalReplicationSlotMapOutput {
	return o
}

func (o PhysicalReplicationSlotMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*PhysicalReplicationSlot] {
	return pulumix.Output[map[string]*PhysicalReplicationSlot]{
		OutputState: o.OutputState,
	}
}

func (o PhysicalReplicationSlotMapOutput) MapIndex(k pulumi.StringInput) PhysicalReplicationSlotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PhysicalReplicationSlot {
		return vs[0].(map[string]*PhysicalReplicationSlot)[vs[1].(string)]
	}).(PhysicalReplicationSlotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PhysicalReplicationSlotInput)(nil)).Elem(), &PhysicalReplicationSlot{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhysicalReplicationSlotArrayInput)(nil)).Elem(), PhysicalReplicationSlotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PhysicalReplicationSlotMapInput)(nil)).Elem(), PhysicalReplicationSlotMap{})
	pulumi.RegisterOutputType(PhysicalReplicationSlotOutput{})
	pulumi.RegisterOutputType(PhysicalReplicationSlotArrayOutput{})
	pulumi.RegisterOutputType(PhysicalReplicationSlotMapOutput{})
}
