// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package postgresql

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-postgresql/sdk/v3/go/postgresql/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// The “getTables“ data source retrieves a list of table names from a specified PostgreSQL database.
func GetTables(ctx *pulumi.Context, args *GetTablesArgs, opts ...pulumi.InvokeOption) (*GetTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTablesResult
	err := ctx.Invoke("postgresql:index/getTables:getTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTables.
type GetTablesArgs struct {
	// The PostgreSQL database which will be queried for table names.
	Database string `pulumi:"database"`
	// List of expressions which will be pattern matched against table names in the query using the PostgreSQL ``LIKE ALL`` operators.
	LikeAllPatterns []string `pulumi:"likeAllPatterns"`
	// List of expressions which will be pattern matched against table names in the query using the PostgreSQL ``LIKE ANY`` operators.
	LikeAnyPatterns []string `pulumi:"likeAnyPatterns"`
	// List of expressions which will be pattern matched against table names in the query using the PostgreSQL ``NOT LIKE ALL`` operators.
	NotLikeAllPatterns []string `pulumi:"notLikeAllPatterns"`
	// Expression which will be pattern matched against table names in the query using the PostgreSQL ``~`` (regular expression match) operator.
	//
	// Note that all optional arguments can be used in conjunction.
	RegexPattern *string `pulumi:"regexPattern"`
	// List of PostgreSQL schema(s) which will be queried for table names. Queries all schemas in the database by default.
	Schemas []string `pulumi:"schemas"`
	// List of PostgreSQL table types which will be queried for table names. Includes all table types by default (including views and temp tables). Use 'BASE TABLE' for normal tables only.
	TableTypes []string `pulumi:"tableTypes"`
}

// A collection of values returned by getTables.
type GetTablesResult struct {
	Database string `pulumi:"database"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	LikeAllPatterns    []string `pulumi:"likeAllPatterns"`
	LikeAnyPatterns    []string `pulumi:"likeAnyPatterns"`
	NotLikeAllPatterns []string `pulumi:"notLikeAllPatterns"`
	RegexPattern       *string  `pulumi:"regexPattern"`
	Schemas            []string `pulumi:"schemas"`
	TableTypes         []string `pulumi:"tableTypes"`
	// A list of PostgreSQL tables retrieved by this data source. Each table consists of the fields documented below.
	// ***
	Tables []GetTablesTable `pulumi:"tables"`
}

func GetTablesOutput(ctx *pulumi.Context, args GetTablesOutputArgs, opts ...pulumi.InvokeOption) GetTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTablesResult, error) {
			args := v.(GetTablesArgs)
			r, err := GetTables(ctx, &args, opts...)
			var s GetTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTablesResultOutput)
}

// A collection of arguments for invoking getTables.
type GetTablesOutputArgs struct {
	// The PostgreSQL database which will be queried for table names.
	Database pulumi.StringInput `pulumi:"database"`
	// List of expressions which will be pattern matched against table names in the query using the PostgreSQL ``LIKE ALL`` operators.
	LikeAllPatterns pulumi.StringArrayInput `pulumi:"likeAllPatterns"`
	// List of expressions which will be pattern matched against table names in the query using the PostgreSQL ``LIKE ANY`` operators.
	LikeAnyPatterns pulumi.StringArrayInput `pulumi:"likeAnyPatterns"`
	// List of expressions which will be pattern matched against table names in the query using the PostgreSQL ``NOT LIKE ALL`` operators.
	NotLikeAllPatterns pulumi.StringArrayInput `pulumi:"notLikeAllPatterns"`
	// Expression which will be pattern matched against table names in the query using the PostgreSQL ``~`` (regular expression match) operator.
	//
	// Note that all optional arguments can be used in conjunction.
	RegexPattern pulumi.StringPtrInput `pulumi:"regexPattern"`
	// List of PostgreSQL schema(s) which will be queried for table names. Queries all schemas in the database by default.
	Schemas pulumi.StringArrayInput `pulumi:"schemas"`
	// List of PostgreSQL table types which will be queried for table names. Includes all table types by default (including views and temp tables). Use 'BASE TABLE' for normal tables only.
	TableTypes pulumi.StringArrayInput `pulumi:"tableTypes"`
}

func (GetTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesArgs)(nil)).Elem()
}

// A collection of values returned by getTables.
type GetTablesResultOutput struct{ *pulumi.OutputState }

func (GetTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTablesResult)(nil)).Elem()
}

func (o GetTablesResultOutput) ToGetTablesResultOutput() GetTablesResultOutput {
	return o
}

func (o GetTablesResultOutput) ToGetTablesResultOutputWithContext(ctx context.Context) GetTablesResultOutput {
	return o
}

func (o GetTablesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetTablesResult] {
	return pulumix.Output[GetTablesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetTablesResultOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesResult) string { return v.Database }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTablesResultOutput) LikeAllPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []string { return v.LikeAllPatterns }).(pulumi.StringArrayOutput)
}

func (o GetTablesResultOutput) LikeAnyPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []string { return v.LikeAnyPatterns }).(pulumi.StringArrayOutput)
}

func (o GetTablesResultOutput) NotLikeAllPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []string { return v.NotLikeAllPatterns }).(pulumi.StringArrayOutput)
}

func (o GetTablesResultOutput) RegexPattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTablesResult) *string { return v.RegexPattern }).(pulumi.StringPtrOutput)
}

func (o GetTablesResultOutput) Schemas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []string { return v.Schemas }).(pulumi.StringArrayOutput)
}

func (o GetTablesResultOutput) TableTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []string { return v.TableTypes }).(pulumi.StringArrayOutput)
}

// A list of PostgreSQL tables retrieved by this data source. Each table consists of the fields documented below.
// ***
func (o GetTablesResultOutput) Tables() GetTablesTableArrayOutput {
	return o.ApplyT(func(v GetTablesResult) []GetTablesTable { return v.Tables }).(GetTablesTableArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTablesResultOutput{})
}
